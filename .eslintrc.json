{
  "root": true,
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "node": true,
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "airbnb",
    "airbnb/hooks",
    "airbnb-typescript",
    "plugin:prettier/recommended" // Make sure this is always the last element in the array.
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "unused-imports",
    "simple-import-sort",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json", "./tsconfig.node.json"],
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "react/react-in-jsx-scope": "off",
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "crlf"
      }
    ], // Avoid conflict rule between Prettier and Airbnb Eslint
    "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
    "react/function-component-definition": "off", // Disable Airbnb's specific function type

    // "react/function-component-definition": [
    //   1,
    //   {
    //     "namedComponents": ["arrow-function", "function-declaration"]
    //   }
    // ]

    "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
    "react/require-default-props": "off", // Allow non-defined react props as undefined
    "react/jsx-props-no-spreading": "off",
    "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
    "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ], // Overrides Airbnb configuration and enable no-restricted-syntax
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "import/order": "off", // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
    // "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "import/no-extraneous-dependencies": "warn",
    "no-console": "warn",
    "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }]
    // "jsx-a11y/interactive-supports-focus": "off",
    // "no-shadow": "off",
    // "@typescript-eslint/no-shadow": [
    //   "warn",
    //   {
    //     "ignoreTypeValueShadow": true,
    //     "ignoreFunctionTypeParameterNameValueShadow": true
    //   }
    // ],
    // "no-console": "warn",
  },
  "ignorePatterns": ["**/vite.config.*", "**/.gitignore", "**/LICENSE"]
}
